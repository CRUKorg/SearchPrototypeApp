!function(global){"use strict";global.app=angular.module("searchPrototypeApp",["ui.router","ngSanitize","elasticsearch","ui.bootstrap","angulartics","angulartics.google.analytics"])}(this),function(){"use strict";app.controller("SearchController",["configurationService","ElasticService","esFactory","$sanitize","$log",function(config,ElasticService,esFactory,$sanitize,$log){var self=this;self.searchInput="",self.lastSearch="",self.page=1,self.resultsPerPage=config.getSetting("resultsPerPage",10),self.failedSearch=!1,self.results=[],self.alerts=[],self.searchSubmit=function(){""!==self.searchInput&&self.searchInput!=self.lastSearch&&(self.lastSearch=self.searchInput,self.executeSearch(self.searchInput))},self.executeSearch=function(text){self.alertsClear(),ElasticService.search({index:"elasticsearch_index_elasticproto_news",from:(self.page-1)*self.resultsPerPage,size:self.resultsPerPage,body:{query:{multi_match:{type:"phrase",fields:["title","body:value"],query:text}},fields:["title","field_published","field_type","body:value","field_url:url"],highlight:{pre_tags:["[mark]"],post_tags:["[/mark]"],fragment_size:150,number_of_fragments:3,fields:{title:{},"body:value":{}}}}}).then(function(body){$log.log(body),self.alertsClear(),self.page=1,self.results=body.hits.hits,self.results.length<1?self.noResults():(self.failedSearch=!1,self.alertsAdd("Your search for <strong>&quot;"+self.searchInput+"&quot;</strong> found <strong>"+body.hits.total+"</strong> results in <strong>"+body.took+"</strong> milliseconds!","success"))},function(error){self.alertsAdd($sanitize(error.message),"danger"),$log.log(error.message)})},self.buildExcerpt=function(fieldData,highlightData){},self.noResults=function(){self.failedSearch=!0,self.alertsAdd("Your search for <strong>&quot;"+self.searchInput+"&quot;</strong> returned no results","warning")},self.alertsAdd=function(message,type){type=type||"info",self.alerts.push({msg:message,type:type})},self.alertsClear=function(){self.alerts=[]}}])}(),function(){"use strict";app.service("ElasticService",function(esFactory){return esFactory({host:crukSearch.config.host,apiVersion:"2.3",log:"trace"})})}(),function(){"use strict";app.filter("dateos",["$filter",function($filter){var suffixes=["th","st","nd","rd"];return function(string,format,timezone){if(!angular.isString(string))return string;if(format=format||"mediumDate",timezone=timezone||null,-1===format.indexOf("S"))return $filter("date")(string,format,timezone);var dtfilter=$filter("date")(string,format,timezone),day=parseInt(dtfilter.slice(-2)),relevantDigits=30>day?day%20:day%30,suffix=3>=relevantDigits?suffixes[relevantDigits]:suffixes[0];return $filter("date")(string,format,timezone).replace("S",suffix)}}])}(),function(){"use strict";app.filter("highlightmatches",function(){return function(string){return angular.isString(string)?string.split("[mark]").join("<mark>").split("[/mark]").join("</mark>"):string}})}(),function(){"use strict";app.filter("htmlsafe",["$sce",function($sce){return function(string){return $sce.trustAsHtml(string)}}])}(),function(){"use strict";app.filter("plaintext",function(){return function(string){return angular.isString(string)?string.replace(/<(?:.|\n)*?>/gm,""):string}})}(),function(){"use strict";app.filter("trim",function(){return function(string){return angular.isString(string)?"function"!=typeof String.prototype.trim?string.trim():string.replace(/^\s+|\s+$/g,""):string}})}(),function(){"use strict";app.provider("configurationService",function(){var self=this;self.appSettings={host:"",resultsPerPage:10,strings:{}},"undefined"!=typeof crukSearch&&"undefined"!=typeof crukSearch.config&&angular.merge(self.appSettings,crukSearch.config),self.setSettingValue=function(name,value){self.appSettings[name]=value},self.get=function(){return self.appSettings},self.getSetting=function(key,fallback){fallback="undefined"!=typeof fallback?fallback:"";var setting=self.appSettings;return angular.isString(key)&&(key=[key]),angular.isArray(key)?(angular.forEach(key,function(value){setting=setting[value]}),setting):fallback},self.set=function(data){self.appSettings=data},self.getString=function(name,values){values=values||{};var regExp=/@(\w*)@/gi;return self.appSettings.strings[name].replace(regExp,function(match){return match=match.replace(/@/gi,""),values[match]})},self.$get=function(){return{appSettings:self.appSettings,get:self.get,set:self.set,getSetting:self.getSetting,setSettingValue:self.setSettingValue,getString:self.getString}}})}();